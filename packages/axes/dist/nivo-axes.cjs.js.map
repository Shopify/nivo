{"version":3,"file":"nivo-axes.cjs.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/compute.js","../src/props.js","../src/components/AxisTick.js","../src/components/Axis.js","../src/components/Axes.js","../src/components/GridLine.js","../src/components/GridLines.js","../src/components/Grid.js","../src/utils.js","../src/canvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\nimport { textPropsByEngine } from '@nivo/core'\n\nexport const centerScale = scale => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return d => scale(d) + offset\n}\n\nconst timeByType = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = value =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = (scale, spec) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    // continuous scales\n    if (scale.ticks) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n\n        if (typeof spec === 'string') {\n            // time interval\n            const matches = spec.match(timeIntervalRegexp)\n            if (matches) {\n                // UTC is used as it's more predictible\n                // however local time could be used too\n                // let's see how it fits users' requirements\n                const timeType = timeByType[matches[2]][scale.useUTC ? 1 : 0]\n                if (matches[1] === undefined) {\n                    return scale.ticks(timeType)\n                }\n\n                return scale.ticks(timeType.every(Number(matches[1])))\n            }\n\n            throw new Error(`Invalid tickValues: ${spec}`)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n\nexport const computeCartesianTicks = ({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}) => {\n    const values = getScaleTicks(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = document.dir === 'rtl'\n    let translate\n    let textAlign = textProps.align.center\n    let textBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d), y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: value,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = (format, scale) => {\n    if (!format || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const f = timeFormat(format)\n        return d => f(new Date(d))\n    }\n\n    return d3Format(format)\n}\n\nexport const computeGridLines = ({ width, height, scale, axis, values: _values }) => {\n    const lineValues = Array.isArray(_values) ? _values : undefined\n    const lineCount = isInteger(_values) ? _values : undefined\n\n    const values = lineValues || getScaleTicks(scale, lineCount)\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n\n    let lines\n    if (axis === 'x') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: position(v),\n            x2: position(v),\n            y1: 0,\n            y2: height,\n        }))\n    } else if (axis === 'y') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: 0,\n            x2: width,\n            y1: position(v),\n            y2: position(v),\n        }))\n    }\n\n    return lines\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport { animated } from 'react-spring'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\n\nconst AxisTick = ({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}) => {\n    const theme = useTheme()\n\n    let value = _value\n    if (format !== undefined) {\n        value = format(value)\n    }\n\n    let gStyle = { opacity: animatedProps.opacity }\n    if (onClick) {\n        gStyle['cursor'] = 'pointer'\n    }\n\n    return (\n        <animated.g\n            transform={animatedProps.transform}\n            {...(onClick ? { onClick: e => onClick(e, value) } : {})}\n            style={gStyle}\n        >\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nAxisTick.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        .isRequired,\n    format: PropTypes.func,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    lineX: PropTypes.number.isRequired,\n    lineY: PropTypes.number.isRequired,\n    textX: PropTypes.number.isRequired,\n    textY: PropTypes.number.isRequired,\n    textBaseline: PropTypes.string.isRequired,\n    textAnchor: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    rotate: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    animatedProps: PropTypes.object.isRequired,\n}\nAxisTick.defaultProps = {\n    opacity: 1,\n    rotate: 0,\n}\n\nexport default memo(AxisTick)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, useTransition, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { axisPropTypes } from '../props'\nimport AxisTick from './AxisTick'\n\nconst defaultTickRenderer = props => <AxisTick {...props} />\n\nconst Axis = ({\n    axis,\n    scale,\n    x,\n    y,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    format,\n    renderTick,\n    legend,\n    legendPosition,\n    legendOffset,\n    onClick,\n    ariaHidden,\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition(ticks, {\n        key: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                    key: tick.key,\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nAxis.propTypes = {\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    scale: PropTypes.func.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    length: PropTypes.number.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    tickValues: axisPropTypes.tickValues,\n    tickSize: PropTypes.number.isRequired,\n    tickPadding: PropTypes.number.isRequired,\n    tickRotation: PropTypes.number.isRequired,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func.isRequired,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n    legendOffset: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    ariaHidden: PropTypes.bool,\n}\nAxis.defaultProps = {\n    x: 0,\n    y: 0,\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    renderTick: defaultTickRenderer,\n    legendPosition: 'end',\n    legendOffset: 0,\n}\n\nexport default memo(Axis)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Axis from './Axis'\nimport { axisPropType } from '../props'\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nconst Axes = ({ xScale, yScale, width, height, top, right, bottom, left }) => {\n    const axes = { top, right, bottom, left }\n\n    return positions.map(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n\n        return (\n            <Axis\n                key={position}\n                {...axis}\n                axis={isXAxis ? 'x' : 'y'}\n                x={position === 'right' ? width : 0}\n                y={position === 'bottom' ? height : 0}\n                scale={isXAxis ? xScale : yScale}\n                length={isXAxis ? width : height}\n                ticksPosition={ticksPosition}\n            />\n        )\n    })\n}\n\nAxes.propTypes = {\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    top: axisPropType,\n    right: axisPropType,\n    bottom: axisPropType,\n    left: axisPropType,\n}\n\nexport default memo(Axes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\n\nconst GridLine = ({ animatedProps }) => {\n    const theme = useTheme()\n\n    return <animated.line {...animatedProps} {...theme.grid.line} />\n}\n\nGridLine.propTypes = {\n    x1: PropTypes.number.isRequired,\n    x2: PropTypes.number.isRequired,\n    y1: PropTypes.number.isRequired,\n    y2: PropTypes.number.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n}\nGridLine.defaultProps = {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n}\n\nexport default memo(GridLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport GridLine from './GridLine'\n\nconst GridLines = ({ lines }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition(lines, {\n        key: line => line.key,\n        initial: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        from: line => ({\n            opacity: 0,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        enter: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        update: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n}\n\nGridLines.propTypes = {\n    type: PropTypes.oneOf(['x', 'y']).isRequired,\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            x1: PropTypes.number,\n            x2: PropTypes.number,\n            y1: PropTypes.number,\n            y2: PropTypes.number,\n        })\n    ).isRequired,\n}\n\nexport default memo(GridLines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport GridLines from './GridLines'\nimport { computeGridLines } from '../compute'\n\nconst Grid = ({ width, height, xScale, yScale, xValues, yValues }) => {\n    const xLines = useMemo(() => {\n        if (!xScale) return false\n\n        return computeGridLines({\n            width,\n            height,\n            scale: xScale,\n            axis: 'x',\n            values: xValues,\n        })\n    }, [xScale, xValues, width, height])\n\n    const yLines = yScale\n        ? computeGridLines({\n              width,\n              height,\n              scale: yScale,\n              axis: 'y',\n              values: yValues,\n          })\n        : false\n\n    return (\n        <>\n            {xLines && <GridLines type=\"x\" lines={xLines} />}\n            {yLines && <GridLines type=\"y\" lines={yLines} />}\n        </>\n    )\n}\n\nGrid.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    xValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    yValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n}\n\nexport default memo(Grid)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const degreesToRadians = degrees => (degrees * Math.PI) / 180\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { degreesToRadians } from './utils'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\n\nexport const renderAxisToCanvas = (\n    ctx,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontSize}px ${theme.axis.ticks.text.fontFamily}`\n\n    if (theme.axis.domain.line.strokeWidth > 0) {\n        ctx.lineWidth = theme.axis.domain.line.strokeWidth\n        ctx.lineCap = 'square'\n        ctx.strokeStyle = theme.axis.domain.line.stroke\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    ticks.forEach(tick => {\n        if (theme.axis.ticks.line.strokeWidth > 0) {\n            ctx.lineWidth = theme.axis.ticks.line.strokeWidth\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.axis.ticks.line.stroke\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format !== undefined ? format(tick.value) : tick.value\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n        ctx.fillStyle = theme.axis.ticks.text.fill\n        ctx.fillText(value, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n        ctx.fillStyle = theme.axis.legend.text.fill\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nexport const renderAxesToCanvas = (\n    ctx,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = (ctx, { width, height, scale, axis, values }) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"],"names":["defineProperty","centerScale","scale","bandwidth","offset","round","Math","d","timeByType","millisecond","timeMillisecond","utcMillisecond","second","timeSecond","utcSecond","minute","timeMinute","utcMinute","hour","timeHour","utcHour","day","timeDay","utcDay","week","timeWeek","utcWeek","sunday","timeSunday","utcSunday","monday","timeMonday","utcMonday","tuesday","timeTuesday","utcTuesday","wednesday","timeWednesday","utcWednesday","thursday","timeThursday","utcThursday","friday","timeFriday","utcFriday","saturday","timeSaturday","utcSaturday","month","timeMonth","utcMonth","year","timeYear","utcYear","timeTypes","Object","keys","timeIntervalRegexp","RegExp","join","isInteger","value","isFinite","floor","getScaleTicks","spec","Array","isArray","ticks","undefined","matches","match","timeType","useUTC","every","Number","Error","domain","computeCartesianTicks","axis","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","textProps","textPropsByEngine","position","line","lineX","lineY","text","textX","textY","isRTL","document","dir","translate","textAlign","align","center","textBaseline","baseline","x","y","top","bottom","left","right","map","key","getFormatter","format","type","f","timeFormat","Date","d3Format","computeGridLines","width","height","_values","lineValues","lineCount","lines","v","x1","x2","y1","y2","axisPropTypes","PropTypes","oneOf","oneOfType","number","arrayOf","string","instanceOf","func","renderTick","legend","node","legendPosition","legendOffset","ariaHidden","bool","axisPropType","shape","AxisTick","_value","onClick","textAnchor","animatedProps","theme","useTheme","gStyle","opacity","React","animated","transform","e","textTransform","defaultProps","rotate","memo","defaultTickRenderer","props","Axis","length","formatValue","useMemo","legendNode","legendX","legendY","legendRotation","dominantBaseline","useMotionConfig","animate","springConfig","config","useSpring","lineX2","lineY2","immediate","transition","useTransition","tick","initial","from","enter","update","leave","transitionProps","state","tickIndex","createElement","positions","Axes","xScale","yScale","axes","isXAxis","GridLine","grid","GridLines","Grid","xValues","yValues","xLines","yLines","degreesToRadians","degrees","PI","renderAxisToCanvas","ctx","save","font","fontSize","fontFamily","strokeWidth","lineWidth","lineCap","strokeStyle","stroke","beginPath","moveTo","lineTo","forEach","fillStyle","fill","fillText","restore","fontWeight","renderAxesToCanvas","renderGridLinesToCanvas"],"mappings":"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"}